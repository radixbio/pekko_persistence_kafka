scala_library(
    name = "persistence",
    visibility = ["//visibility:public"],
    exports = [
        ":persistence-lib",
        ":persistence-query",
        "//shared/persistence/src/main/scala/serializations/algs/dbpmjss:dbpmjss-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/dbpmjss/uservice:dbpmjss-uservice-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/gi:gi-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/gi/uservice:gi-uservice-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/hmrpp:hmrpp-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/hmrpp/uservice:hmrpp-uservice-serializations",
        "//shared/persistence/src/main/scala/serializations/bioutil:bioutil-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/archetypes:archetype-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/azure:azure-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/common:driver-commons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/echo:echo-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/elemental/gateway:elemental-gateway-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/elemental/kafka_bridge:elemental-bridge-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/entris2:entris2-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/eth_multitrons:eth_multitrons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/eve:eve-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/gali_motion_controller:gali-motion-controller-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/ht91100:ht91100-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/kafka_connectors:kafka-connectors-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/ln2:ln2-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/messaging:messaging-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/metasite:metasite-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/minifors2:minifors2-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/mock_bioreactor:mock_bioreactor-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/multitrons:multitrons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/oceanoptics:oceanoptics-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/octet:octet-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/olditrons:olditrons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/opentrons:opentrons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/quantstudio:quantstudio-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/sygma:sygma-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/tecan:tecan-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/tfexactive:tfexactive-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/watlow96_thermal:watlow96_thermal-serializations",
        "//shared/persistence/src/main/scala/serializations/media:media-serializations",
        "//shared/persistence/src/main/scala/serializations/runtime:actor-discovery-serializations",
        "//shared/persistence/src/main/scala/serializations/scheduler/v1:scheduler-serialization",
        "//shared/persistence/src/main/scala/serializations/scheduler/v2:scheduler-serialization",
        "//shared/persistence/src/main/scala/serializations/squants:squants-serializations",
        "//shared/persistence/src/main/scala/serializations/utils/akka:akka-util-serializations",
        "//shared/persistence/src/main/scala/serializations/utils/bioutil/octet:bioutil-octet-circe",
        "//shared/persistence/src/main/scala/serializations/utils/bunny:bunny-serialization",
        "//shared/persistence/src/main/scala/serializations/utils/filesystem:filesystem-util-serializations",
        "//shared/persistence/src/main/scala/serializations/utils/healthcheck:healthcheck-serialization",
        "//shared/persistence/src/main/scala/serializations/utils/pingpong:pingpong2-serializations",
        "//shared/persistence/src/main/scala/serializations/utils/rainbow:rainbow-serialization",
        "//shared/persistence/src/main/scala/serializations/utils/vibecheck:vibecheck-serializations",
        "//shared/persistence/src/main/scala/serializations/vm:vm-serializations",
    ],
    deps = [
        ":persistence-lib",
        ":persistence-query",
        "//shared/persistence/src/main/scala/serializations/algs/dbpmjss:dbpmjss-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/dbpmjss/uservice:dbpmjss-uservice-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/gi:gi-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/gi/uservice:gi-uservice-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/hmrpp:hmrpp-serializations",
        "//shared/persistence/src/main/scala/serializations/algs/hmrpp/uservice:hmrpp-uservice-serializations",
        "//shared/persistence/src/main/scala/serializations/bioutil:bioutil-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/archetypes:archetype-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/azure:azure-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/common:driver-commons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/echo:echo-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/elemental/gateway:elemental-gateway-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/elemental/kafka_bridge:elemental-bridge-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/entris2:entris2-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/eth_multitrons:eth_multitrons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/eve:eve-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/gali_motion_controller:gali-motion-controller-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/ht91100:ht91100-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/kafka_connectors:kafka-connectors-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/ln2:ln2-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/messaging:messaging-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/metasite:metasite-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/minifors2:minifors2-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/mock_bioreactor:mock_bioreactor-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/multitrons:multitrons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/oceanoptics:oceanoptics-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/octet:octet-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/olditrons:olditrons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/opentrons:opentrons-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/quantstudio:quantstudio-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/sygma:sygma-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/tecan:tecan-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/tfexactive:tfexactive-serializations",
        "//shared/persistence/src/main/scala/serializations/device_drivers/watlow96_thermal:watlow96_thermal-serializations",
        "//shared/persistence/src/main/scala/serializations/media:media-serializations",
        "//shared/persistence/src/main/scala/serializations/runtime:actor-discovery-serializations",
        "//shared/persistence/src/main/scala/serializations/scheduler/v1:scheduler-serialization",
        "//shared/persistence/src/main/scala/serializations/scheduler/v2:scheduler-serialization",
        "//shared/persistence/src/main/scala/serializations/squants:squants-serializations",
        "//shared/persistence/src/main/scala/serializations/utils/akka:akka-util-serializations",
        "//shared/persistence/src/main/scala/serializations/utils/bioutil/octet:bioutil-octet-circe",
        "//shared/persistence/src/main/scala/serializations/utils/bunny:bunny-serialization",
        "//shared/persistence/src/main/scala/serializations/utils/filesystem:filesystem-util-serializations",
        "//shared/persistence/src/main/scala/serializations/utils/healthcheck:healthcheck-serialization",
        "//shared/persistence/src/main/scala/serializations/utils/pingpong:pingpong2-serializations",
        "//shared/persistence/src/main/scala/serializations/utils/rainbow:rainbow-serialization",
        "//shared/persistence/src/main/scala/serializations/utils/vibecheck:vibecheck-serializations",
        "//shared/persistence/src/main/scala/serializations/vm:vm-serializations",
    ],
)

scala_library(
    name = "persistence-lib",
    srcs = glob(["src/main/scala/*.scala"]),
    resources = ["src/main/resources/reference.conf"],
    visibility = ["//shared/persistence:__subpackages__"],
    exports = [
        ":autoserz-lib",
        "@maven//:com_chuusai_shapeless_2_13",
        "@maven//:com_propensive_magnolia_2_13",
        "@maven//:com_propensive_mercator_2_13",
        "@maven//:com_sksamuel_avro4s_avro4s_core_2_13",
        "@maven//:com_typesafe_akka_akka_actor_2_13",
        "@maven//:com_typesafe_akka_akka_actor_typed_2_13",
        "@maven//:com_typesafe_akka_akka_distributed_data_2_13",
        "@maven//:com_typesafe_akka_akka_persistence_2_13",
        "@maven//:com_typesafe_akka_akka_stream_2_13",
        "@maven//:com_typesafe_akka_akka_stream_kafka_2_13",
        "@maven//:com_typesafe_config",
        "@maven//:io_confluent_kafka_avro_serializer",
        "@maven//:io_confluent_kafka_schema_registry_client",
        "@maven//:io_confluent_kafka_schema_serializer",
        "@maven//:org_apache_avro_avro",
        "@maven//:org_apache_kafka_kafka_clients",
        "@maven//:org_apache_kafka_kafka_server_common",
    ],
    deps = [
        ":autoserz-lib",
        "@maven//:com_chuusai_shapeless_2_13",
        "@maven//:com_propensive_magnolia_2_13",
        "@maven//:com_propensive_mercator_2_13",
        "@maven//:com_sksamuel_avro4s_avro4s_core_2_13",
        "@maven//:com_typesafe_akka_akka_actor_2_13",
        "@maven//:com_typesafe_akka_akka_actor_typed_2_13",
        "@maven//:com_typesafe_akka_akka_distributed_data_2_13",
        "@maven//:com_typesafe_akka_akka_persistence_2_13",
        "@maven//:com_typesafe_akka_akka_stream_2_13",
        "@maven//:com_typesafe_akka_akka_stream_kafka_2_13",
        "@maven//:com_typesafe_config",
        "@maven//:io_confluent_kafka_avro_serializer",
        "@maven//:io_confluent_kafka_schema_registry_client",
        "@maven//:io_confluent_kafka_schema_serializer",
        "@maven//:org_apache_avro_avro",
        "@maven//:org_apache_kafka_kafka_clients",
        "@maven//:org_apache_kafka_kafka_server_common",
    ],
)

scala_library(
    name = "persistence-query",
    srcs = glob(["src/main/scala/query/**/*.scala"]),
    visibility = ["//shared/persistence:__subpackages__"],
    exports = [
        ":persistence-lib",
        "@maven//:com_typesafe_akka_akka_persistence_query_2_13",
    ],
    deps = [
        ":persistence-lib",
        "@maven//:com_typesafe_akka_akka_actor_2_13",
        "@maven//:com_typesafe_akka_akka_persistence_query_2_13",
        "@maven//:com_typesafe_akka_akka_stream_kafka_2_13",
        "@maven//:io_confluent_kafka_avro_serializer",
    ],
)

scala_test(
    name = "akka-persistence-tck",
    srcs = [
        "src/test/scala/KafkaJournalTest.scala",
        "src/test/scala/KafkaSnapshotStoreTest.scala",
        "src/test/scala/Test.scala",
    ],
    resources = ["src/test/resources/application.conf"],
    deps = [
        ":persistence-lib",
        "@maven//:com_typesafe_akka_akka_cluster_typed_2_13",
        "@maven//:com_typesafe_akka_akka_persistence_tck_2_13",
        "@maven//:com_typesafe_akka_akka_testkit_2_13",
        "@maven//:io_confluent_kafka_schema_registry",
        "@maven//:io_confluent_rest_utils",
        "@maven//:io_github_embeddedkafka_embedded_kafka_2_13",
        "@maven//:io_github_embeddedkafka_embedded_kafka_schema_registry_2_13",
        "@maven//:org_apache_kafka_kafka_2_13",
        "@maven//:org_apache_zookeeper_zookeeper",
        "@maven//:org_scalatest_scalatest_2_13",
    ],
)

scala_binary(
    name = "test_binary",
    srcs = ["src/test/scala/Test.scala"],
    main_class = "com.radix.shared.persistence.test.Test",
    resources = ["src/test/resources/application.conf"],
    deps = [
        ":persistence",
        "@maven//:io_confluent_kafka_schema_registry",
    ],
)

scala_test(
    name = "avro-serialization-test",
    srcs = ["src/test/scala/ActorSerializationTest.scala"],
    deps = [
        ":persistence-lib",
        "@maven//:com_sksamuel_avro4s_avro4s_core_2_13",
        "@maven//:com_typesafe_akka_akka_actor_testkit_typed_2_13",
        "@maven//:com_typesafe_akka_akka_cluster_typed_2_13",
        "@maven//:com_typesafe_akka_akka_testkit_2_13",
        "@maven//:com_typesafe_config",
        "@maven//:org_scalatest_scalatest_2_13",
        "@maven//:org_scalatest_scalatest_shouldmatchers_2_13",
    ],
)

scala_test(
    name = "generic-serialization-test",
    srcs = [
        "src/test/scala/Test.scala",
    ],
    resources = ["src/test/resources/application.conf"],
    tags = ["exclusive"],
    deps = [
        ":persistence",
        "//test:test-lib",
        "@maven//:com_typesafe_akka_akka_actor_typed_2_13",
        "@maven//:io_github_embeddedkafka_embedded_kafka_schema_registry_2_13",
        "@maven//:org_scalatest_scalatest_2_13",
    ],
)

scala_library(
    name = "serialization-test",
    srcs = glob(["src/test/scala/SerializationTest.scala"]),
    visibility = ["//shared/persistence:__subpackages__"],
    exports = [
        "//test:test-lib",
        "@maven//:com_typesafe_akka_akka_actor_testkit_typed_2_13",
        "@maven//:com_typesafe_akka_akka_testkit_2_13",
        "@maven//:org_scalatest_scalatest_2_13",
    ],
    deps = [
        "//test:test-lib",
        "@maven//:com_typesafe_akka_akka_actor_testkit_typed_2_13",
        "@maven//:com_typesafe_akka_akka_testkit_2_13",
        "@maven//:org_scalatest_scalatest_2_13",
    ],
)

scala_binary(
    name = "debug",
    srcs = [],
    main_class = "ammonite.Main",
    deps = [
        ":persistence",  # whatever you want to run
        "@maven//:com_lihaoyi_ammonite_2_13_8",
    ],
)

scala_binary(
    name = "auto-serializers",
    srcs = glob(["src/main/scala/autoserz/*.scala"]),
    main_class = "com.radix.shared.persistence.autoserz.AutoSerializers",
    visibility = ["//visibility:public"],
    deps = [
        "//shared/persistence:persistence-lib",
        "@maven//:com_lihaoyi_sourcecode_2_13",
        "@maven//:org_scalameta_common_2_13",
        "@maven//:org_scalameta_fastparse_v2_2_13",
        "@maven//:org_scalameta_parsers_2_13",
        "@maven//:org_scalameta_scalameta_2_13",
        "@maven//:org_scalameta_trees_2_13",
    ],
)

scala_binary(
    name = "auto-serializer-bindings",
    srcs = glob(["src/main/scala/autoserz/*.scala"]),
    main_class = "com.radix.shared.persistence.autoserz.AutoBindings",
    visibility = ["//visibility:public"],
    deps = [
        "//shared/persistence:persistence-lib",
        "@maven//:com_lihaoyi_sourcecode_2_13",
        "@maven//:org_scalameta_common_2_13",
        "@maven//:org_scalameta_fastparse_v2_2_13",
        "@maven//:org_scalameta_parsers_2_13",
        "@maven//:org_scalameta_scalameta_2_13",
        "@maven//:org_scalameta_trees_2_13",
    ],
)

scala_library(
    name = "autoserz-lib",
    srcs = ["src/main/scala/autoserz/AutoSerz.scala"],
)
